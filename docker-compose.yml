version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: task_manager_db
    environment:
      POSTGRES_DB: task_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Backend API (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task_manager_backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/task_manager
      JWT_ISSUER: task-manager-api
      JWT_AUDIENCE: task-manager-users
      JWT_ALGORITHM: HS256
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_TTL_MINUTES: 30
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    networks:
      - app-network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task_manager_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NODE_ENV: development
      WATCHPACK_POLLING: true
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/next.config.ts:/app/next.config.ts
      - ./frontend/package.json:/app/package.json
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
      - ./frontend/postcss.config.mjs:/app/postcss.config.mjs
      - /app/node_modules
      - /app/.next
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
